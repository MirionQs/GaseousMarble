<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

    <Type Name="gm::core::Size">
        <DisplayString>[{width} x {height}]</DisplayString>
    </Type>

    <Type Name="gm::core::Point">
        <DisplayString>({x}, {y})</DisplayString>
    </Type>

    <Type Name="gm::core::BoundingBox">
        <DisplayString>[({left}, {top}) : ({right}, {bottom})]</DisplayString>
    </Type>

    <Type Name="gm::engine::BasicString&lt;*&gt;">
        <Intrinsic Name="header" Expression="(gm::engine::StringHeader*)(_data - sizeof(gm::engine::StringHeader) / sizeof($T1))"/>
        <Intrinsic Name="size" Expression="header()->size"/>
        <Intrinsic Name="ref_count" Expression="header()->ref_count"/>
        <DisplayString>{_data, [size()] na}</DisplayString>
        <Expand>
            <Item Name="[size]">size()</Item>
            <Item Name="[ref count]">ref_count()</Item>
            <ArrayItems>
                <Size>size()</Size>
                <ValuePointer>_data</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="gm::engine::BasicStringView&lt;*&gt;">
        <Intrinsic Name="header" Expression="(gm::engine::StringHeader*)(_data - sizeof(gm::engine::StringHeader) / sizeof($T1))"/>
        <Intrinsic Name="size" Expression="header()->size"/>
        <Intrinsic Name="ref_count" Expression="header()->ref_count"/>
        <DisplayString>{_data, [size()] na}</DisplayString>
        <Expand>
            <Item Name="[size]">size()</Item>
            <Item Name="[ref count]">ref_count()</Item>
            <ArrayItems>
                <Size>size()</Size>
                <ValuePointer>_data</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="gm::engine::Value">
        <DisplayString Condition="_type == gm::engine::ValueType::real">{_real}</DisplayString>
        <DisplayString Condition="_type == gm::engine::ValueType::string">{_string}</DisplayString>
        <Expand>
            <ExpandedItem Condition="_type == gm::engine::ValueType::real">_real</ExpandedItem>
            <ExpandedItem Condition="_type == gm::engine::ValueType::string">_string</ExpandedItem>
        </Expand>
    </Type>

    <Type Name="gm::engine::Function">
        <Intrinsic Name="address" Expression="_address"/>
        <DisplayString Condition="_arg_count == -1">{_name, sb}(...)</DisplayString>
        <DisplayString Condition="_arg_count == 0">{_name, sb}()</DisplayString>
        <DisplayString Condition="_arg_count == 1">{_name, sb}(&lt;1 arg&gt;)</DisplayString>
        <DisplayString Condition="_arg_count >= 2">{_name, sb}(&lt;{_arg_count} args&gt;)</DisplayString>
        <Expand>
            <Item Name="[address]">address(), nvo</Item>
        </Expand>
    </Type>

    <Type Name="gm::engine::IFunction">
        <Intrinsic Name="count" Expression="_resource->count"/>
        <DisplayString Condition="count() == 0">[empty]</DisplayString>
        <DisplayString Condition="count() == 1">[1 function]</DisplayString>
        <DisplayString Condition="count() > 1">[{count()} functions]</DisplayString>
        <Expand>
            <ArrayItems>
                <Size>count()</Size>
                <ValuePointer>_resource->functions</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="gm::engine::Texture">
        <Intrinsic Name="data" Expression="_data"/>
        <DisplayString>{{ image={_image_size} texture={_texture_size} }}</DisplayString>
        <Expand>
            <Item Name="[data]">data(), nvo</Item>
        </Expand>
    </Type>

    <Type Name="gm::engine::ITexture">
        <Intrinsic Name="count" Expression="*_count"/>
        <DisplayString Condition="count() == 0">[empty]</DisplayString>
        <DisplayString Condition="count() == 1">[1 texture]</DisplayString>
        <DisplayString Condition="count() > 1">[{count()} textures]</DisplayString>
        <Expand>
            <ArrayItems>
                <Size>count()</Size>
                <ValuePointer>*_textures</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="gm::engine::Bitmap">
        <DisplayString>{{ size={_size} }}</DisplayString>
    </Type>

    <Type Name="gm::engine::SpriteData">
        <Intrinsic Name="origin_" Expression="origin"/>
        <Intrinsic Name="bounding_box_" Expression="bounding_box"/>
        <Intrinsic Name="texture_ids_" Expression="texture_ids"/>
        <DisplayString Condition="subimage_count == 0">[empty]</DisplayString>
        <DisplayString Condition="subimage_count == 1">[1 subimage]</DisplayString>
        <DisplayString Condition="subimage_count > 1">[{subimage_count} subimages]</DisplayString>
        <Expand>
            <Item Name="[origin]">origin_()</Item>
            <Item Name="[bounding box]">bounding_box_()</Item>
            <Item Name="[texture ids]">texture_ids_(), [subimage_count] na</Item>
            <ArrayItems>
                <Size>subimage_count</Size>
                <ValuePointer>bitmaps, na</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

    <Type Name="gm::engine::Sprite">
        <DisplayString>{{ name={_name, na} subimage_count={_data->subimage_count} }}</DisplayString>
        <Expand>
            <ExpandedItem>_data</ExpandedItem>
        </Expand>
    </Type>

    <Type Name="gm::engine::ISprite">
        <Intrinsic Name="count" Expression="_resource->count"/>
        <DisplayString Condition="count() == 0">[empty]</DisplayString>
        <DisplayString Condition="count() == 1">[1 sprite]</DisplayString>
        <DisplayString Condition="count() > 1">[{count()} sprites]</DisplayString>
        <Expand>
            <ArrayItems>
                <Size>count()</Size>
                <ValuePointer>_resource->sprites, na</ValuePointer>
            </ArrayItems>
        </Expand>
    </Type>

</AutoVisualizer>